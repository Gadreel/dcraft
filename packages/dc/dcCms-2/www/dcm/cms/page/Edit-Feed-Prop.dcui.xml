<dcui Title="Edit Feed Properties">
	<RequireStyle Path="/dcm/cms/css/main.css" />
	<RequireLib Path="/dcw/js/vkbeautify.0.99.00.beta.js" />
	<RequireLib Path="/dcw/js/xml2json.min.js" />
	
	<Skeleton>
		<TitledSection Title="Feed Properties" class="titledform">
			<Form Name="DepEfpEditPage">
				<div class="formbuttons">
					<!-- 
					<Button Click="DoDecorate" Label="DECO" class="ui-btn" /> 
					
					TODO preview
					
					<Button Click="DoSave" Label="Save Draft" class="ui-btn" />
					 --> 
					<Button Click="DoSavePublish" Label="Save &amp; Publish" /> 
					<!--  
					<Button Click="DoOpenGallery" Label="Select Image" />
					-->
				</div>
				
				<FieldContainer Label="Title:">
					<TextInput Name="Title" Required="true" />
				</FieldContainer>
				<FieldContainer Label="Path:">
					<TextInput Name="Path" readonly="true" />
				</FieldContainer>
				<FieldContainer Label="Keywords:">
					<TextInput Name="Keywords" />
				</FieldContainer>
				<FieldContainer Label="Description:">
					<TextArea Name="Description" />
				</FieldContainer>
				<FieldContainer Label="Published:">
					<TextInput Name="Published" Pattern="\d\d\d\d-\d\d-\d\d(\s\d\d:\d\d)?" placeholder="YYYY-MM-DD or YYYY-MM-DD hh:mm, military time" />
				</FieldContainer>
				<FieldContainer Label="Author:">
					<TextInput Name="AuthorName" readonly="true" />
				</FieldContainer>
				<FieldContainer Label="Created:">
					<TextInput Name="Created" readonly="true" />
				</FieldContainer>
				<FieldContainer Label="Modified:">
					<TextInput Name="Modified" readonly="true" />
				</FieldContainer>
			</Form>
		</TitledSection>
	</Skeleton>
	<Function Name="DoDecorate"><![CDATA[
			var entry = this;
    ]]></Function>
	<Function Name="Load"><![CDATA[
			var entry = this;
			
			if (!entry.Params.Channel || !entry.Params.Path)
				entry.Params = dc.cms.edit.Loader.getContext().Params.Page;
			
			entry.Store.PublishFlag = false; 
    ]]></Function>
	<Function Name="LoadRecord" Params="e"><![CDATA[
			var entry = this;
			
			e.Message = { 
				Service: 'dcmCms',
				Feature: 'Feeds',
				Op: 'LoadFeedFiles',
				Body: { 
					Channel: entry.Params.Channel, 
					Path: entry.Params.Path 
				}
			};
	]]></Function>
	<Function Name="AfterLoadRecord" Params="e"><![CDATA[
			var entry = this;

			entry.Store.Data = e.Data;
			entry.Store.ContentXml = e.Data.ContentXml ? $($.parseXML(e.Data.ContentXml)) : null;
			entry.Store.ChannelXml = e.Data.ChannelXml ? $($.parseXML(e.Data.ChannelXml)) : null;
			
			// collect all the content properties into a usable format
			e.Data = {
				Path: entry.Params.Path ? entry.Params.Path : ''
			};
			
			$(entry.Store.ContentXml).find('dcf > Field').each(function() {
				e.Data[$(this).attr('Name')] = $(this).dcVal();
			});
			
			if (e.Data.Created)
				e.Data.Created = dc.util.Date.formatZLocalMedium(e.Data.Created);
			
			if (e.Data.Modified)
				e.Data.Modified = dc.util.Date.formatZLocalMedium(e.Data.Modified);
			
			if (e.Data.Published)
				e.Data.Published = e.Data.Published.replace('T', ' ');  //dc.util.Date.formatZLocalMedium(e.Data.Published);
			
			var dtags = [];
			
			$(entry.Store.ContentXml).find('dcf > Tag').each(function() {
				dtags.push($(this).attr('Alias'));
			});
			
			if (dtags.length)
				e.Data.Tags = dtags;

			// add to the properties form layout			
			var xtralayout = [];
			
			$(entry.Store.ChannelXml).find('Channel > CustomFields').each(function() {
				//console.log('cf: ' + $(this).attr('Name'));
				
				var lst = dc.cms.feed.parseFormLayout(this);
				
				for (var i = 0; i < lst.length; i++) 
					xtralayout.push(lst[i]);
			});
			
			var atags = [];
			
			$(entry.Store.ChannelXml).find('Channel > Tag').each(function() {
				var name = $(this).attr('Name');
				var alias = $(this).attr('Alias');
				
				if (!alias)
					alias = name;
				
				atags.push({
					Element: 'RadioCheck',
					Value: alias,
					Label: name
				});
			});
			
			if (atags.length) 
				xtralayout.push({
					Element: 'CheckGroup',
					Label: 'Tags:',
					Name: 'Tags',
					Children: atags
				});	
			
			entry.addFormLayout('DepEfpEditPage', xtralayout);
	]]></Function>
	<Function Name="DoSave"><![CDATA[
			$('#frmDepEfpEditPage').submit();   
	]]></Function>
	<Function Name="DoSavePublish"><![CDATA[
			this.Store.PublishFlag = true; 
			$('#frmDepEfpEditPage').submit();   
	]]></Function>
	<Function Name="IsRecordChanged" Params="e"><![CDATA[
			var entry = this;
				
			if (entry.Store.PublishFlag) 
				e.Changed = true;
	]]></Function>
	<Function Name="SaveRecord" Params="e"><![CDATA[
			var entry = this;
			
			var savedata = {
				Path: entry.Params.Path,
				Channel: entry.Params.Channel,
				Publish: this.Store.PublishFlag,
				SetFields: [],
				SetParts: []
			};
			
			for (var fldname in e.Data) {
				if (e.Data.hasOwnProperty(fldname) && (fldname != 'Tags')) {
					var fld = e.Data[fldname];

					if (fldname == 'Published')
						fld = fld.replace(' ', 'T');

					savedata.SetFields.push({
						Name: fldname,
						Value: fld
					});
				}
			}
			
			if (e.Data.Tags) 
				savedata.SetTags = e.Data.Tags;
			
			e.Message = { 
				Service: 'dcmCms',
				Feature: 'Feeds',
				Op: 'AlterFeedFiles',
				Body: savedata
			};
	]]></Function>
	<Function Name="AfterSave"><![CDATA[
			var entry = this;

			// TODO review this - add /Pages to path?  only for Pages?
			dc.pui.Loader.clearPageCache(entry.Params.Path); 
			
			if (this.Store.PublishFlag) {
				this.Store.PublishFlag = false;
				
				dc.pui.Popup.alert('Saved and published');
			}
			else {
				dc.pui.Popup.alert('Saved as draft');
			}
	]]></Function>
	<Function Name="DoOpenGallery"><![CDATA[
			var entry = this;
			
			var lf = entry.Store.__LastFocus;
			
			var scope = lf ? entry.form(lf.Form).query(lf.Field).attr('data-gallery-scope') : null;

			if (scope) {
				entry.callPageFunc('DoShowGallery', scope, entry.form(lf.Form).query(lf.Field).attr('data-gallery-path'), function(img) {
					//console.log('i: ' + img);
					entry.form(lf.Form).query(lf.Field).val(img);
				});
			}
			else {
				//entry.callPageFunc('DoShowGallery');
				var ce = entry.Store.CurrentEditor;
				
				if (ce && entry.Store.Editors[ce] && entry.Store.Editors[ce].openGallery) {
					entry.Store.Editors[ce].openGallery(entry.Params.InitialGallery); 
				}
				else {
					dc.pui.Popup.alert('This section does not accept images, change to a section that does.');
				}
			}
	]]></Function>
	<Function Name="DoSelectGallery" Params="path,data"><![CDATA[
			var entry = this;
			
			var ce = entry.Store.CurrentEditor;
			
			if (ce && entry.Store.Editors[ce] && entry.Store.Editors[ce].selectGallery) {
				entry.Store.Editors[ce].selectGallery(path,data); 
			}
			else {
				dc.pui.Popup.alert('This section does not accept images, change to a section that does.');
			}
	]]></Function>
</dcui>