<dcui Title="Edit Show" AuthTags="Admin,Editor">
	<RequireLib Path="/dcw/js/jquery-ui.min.js" />
	<RequireLib Path="/dcm/cms/js/dc.cms.js" />

	<Skeleton>
		<TitledSection Title="Edit Show" class="titledform">
			<div class="formbuttons">
				<Button Click="DoSelectImage" Label="Select Image From Gallery" />
				<Button Click="DoAddImage" Label="Upload New Image" />
				<Button Click="DoSaveShow" Label="Save" /> 
				<!--  TODO DoDelete is already here, add button but only show through CMS not direct banner -->
			</div>
			
			<ul id="imageDesEList" data-role="listview" data-inset="true" data-count-theme="a" data-split-icon="delete" />					
		</TitledSection>
	</Skeleton>
	<Function Name="Load"><![CDATA[
			var entry = this;
			
			// if seetings are present then we are thawing, so don't do any loading/init
			if (entry.Store.Settings) {
				entry.callPageFunc('RefreshImages');
				return;
			}
			
			entry.Store.SortTime = null;
			
			var list = $('#imageDesEList');		

			// TODO for touch sorting see how dc.ui.js has touch punch in it and review if it makes sense
		    list.sortable();
		    list.disableSelection();
		    
		    list.bind("sortstart", function(event, ui) {
		    	//console.log('abc');
		    });					
		    
		    list.bind("sortstop", function(event, ui) {
		    	//console.log('123');
				list.listview('refresh');
				
				entry.Store.Changed = true;
							
				entry.callPageFunc('ReorderImages');
				
				entry.Store.SortTime = new Date();
			});					
	
			list.empty();
			list.append('<li><h3><i class="fa fa-spinner fa-spin"></i></h3></li>');
				
			list.listview('refresh');
			
			// first time load
			if (!entry.Params.Path) {
				var cparams = dc.cms.edit.Loader.getContext().Params;
				
				if (cparams && cparams.Show) {
					entry.Params.Path = cparams.Show.Path;
					entry.Params.Alias = cparams.Show.Alias;
				}
			}
		
			entry.Store.Settings = { };
			entry.Store.Changed = false;
			entry.Store.Show = null;			// obj from within settings
			entry.Store.CurrImage = null;		// obj from within show
			
			dc.comm.sendMessage({ 
				Service: 'dcmCms',
				Feature: 'WebGallery',
				Op: 'LoadGallery',
				Body: {
					FolderPath: entry.Params.Path
				}
			}, function(resp) {
				if (resp.Result > 0) {
					dc.pui.Popup.alert(resp.Message);
					return;
				}

				if (resp.Body) 
					entry.Store.Settings = resp.Body.Settings;
				
				if (!entry.Store.Settings.Shows)
					entry.Store.Settings.Shows = [ ];
					
				for (var i = 0; i < entry.Store.Settings.Shows.length; i++) {
					var sh = entry.Store.Settings.Shows[i];
					
					if (sh.Alias == entry.Params.Alias) {
						entry.Store.Show = sh;
						
						if (!sh.Images)
							sh.Images = [];
					}
				}
			
				entry.callPageFunc('RefreshImages');
			});
	]]></Function>
	<Function Name="RefreshImages"><![CDATA[
			var entry = this;
			 
			var list = $('#imageDesEList');
			list.empty();
			
			if (entry.Store.Show) {
				for (var i = 0; i < entry.Store.Show.Images.length; i++) {
					var img = entry.Store.Show.Images[i]; 
				
					var litm = $('<li></li>');
					
					litm.attr('data-img-alias', img.Alias);
					
					var anchr = $('<a href="#"><h2>' + String.escapeHtml(img.Alias) + '</h2>'
							+ '<p>' + String.escapeHtml(img.Description) + '</p>'
							+ '</a>');
					
					anchr.click(img, function(e) {
					    //	console.log('xyz');
					    
					    if (entry.Store.SortTime) {
					    	if (new Date().getTime() - entry.Store.SortTime.getTime() < 500) {
						    	entry.Store.SortTime = null;
						    	return;
						    }
					    }
					    
						for (var i = 0; i < entry.Store.Show.Images.length; i++) {
							var img = entry.Store.Show.Images[i];
							
							if (img.Alias == e.data.Alias) {
								if (entry.Store.Show.PropertyEditor)
									dc.cms.edit.Loader.loadPane(entry.Store.Show.PropertyEditor, { 
										Image: img,
										Show: entry.Store.Show
									});
								else
									dc.cms.edit.Loader.loadPane('/dcm/edit/show/EditImage', { 
										Image: img,
										Show: entry.Store.Show
									});
								
								break;
							}
						}
	
						e.preventDefault();
						return false;
					});
					
					litm.append(anchr);
					
					var anchr2 = $('<a href="#">Delete</a>')
					
					anchr2.click(img, function(e) {
						dc.pui.Popup.confirm('Are you sure you want to remove ' + String.escapeHtml(e.data.Alias) + '?', function() {
							entry.Store.Changed = true;
							
							$('#imageDesEList li[data-img-alias="' + e.data.Alias + '"]').remove();
							$('#imageDesEList').listview('refresh');									
							
							entry.callPageFunc('ReorderImages');
						});
						
						e.preventDefault();
						return false;
					});
					
					litm.append(anchr2);
					
					list.append(litm);
				}
			
				list.listview('refresh');									
			}
	]]></Function>
	<Function Name="ReorderImages"><![CDATA[
			var entry = this;
			
			var oldimages = entry.Store.Show.Images;
			entry.Store.Show.Images = [];
			
			$('#imageDesEList li').each(function(i) {
				var calias = $(this).attr('data-img-alias');
				
				//console.log('adding: ' + calias);
				
				for (var i = 0; i < oldimages.length; i++) {
					var img = oldimages[i];
					
					if (img.Alias == calias) {
						entry.Store.Show.Images.push(img);
						break;
					}
				}
			});			
	]]></Function>
	<Function Name="DoSaveShow"><![CDATA[
			var entry = this;
			
			dc.comm.sendMessage({ 
				Service: 'dcmCms',
				Feature: 'WebGallery',
				Op: 'UpdateGallery',
				Body: {
					FolderPath: entry.Params.Path,
					Settings: entry.Store.Settings
				}
			}, function(resp) {
				if (resp.Result > 0) 
					dc.pui.Popup.alert(resp.Message);
				else
					dc.pui.Popup.alert('Show saved');
			});
	]]></Function>
	<Function Name="DoSelectImage"><![CDATA[			
			var entry = this;
		
			dc.cms.edit.Loader.loadPane('/dcm/edit/galleries/Chooser', { 
				Path: entry.Params.Path,
				Chained: true,
				Variation: dc.cms.vary.find(entry.Store.Settings, entry.Store.Show.Variation),
				Callback: function(imgs) {
					if (imgs) {
						for (var i = 0; i < imgs.length; i++) 
							entry.Store.Show.Images.push({
								Alias: imgs[i].FileName,
								Description: ''
							});
					}
					
					entry.callPageFunc('RefreshImages');
				} 
			});
	]]></Function>
	<Function Name="DoAddImage"><![CDATA[			
			var entry = this;
		
			dc.cms.edit.Loader.loadPane('/dcm/edit/galleries/QuickUpload', { 
				Path: entry.Params.Path,
				Variation: dc.cms.vary.find(entry.Store.Settings, entry.Store.Show.Variation),
				Callback: function(imgs) {
					if (imgs) {
						for (var i = 0; i < imgs.length; i++) 
							entry.Store.Show.Images.push({
								Alias: imgs[i].FileName,
								Description: ''
							});
					}
					
					entry.callPageFunc('RefreshImages');
				} 
			});
	]]></Function>
	<Function Name="DoDelete"><![CDATA[
			var entry = this;
			
			if (!entry.Params.Alias) {
				window.history.back();
				return;
			}
			
			dc.pui.Popup.confirm('Are you sure you want to delete this Show?', function() {
				if (entry.Params.Alias && entry.Store.Settings.Shows && entry.Store.Settings.Shows.length) {
					for (var i1 = 0; i1 < entry.Store.Settings.Shows.length; i1++) {
						var v = entry.Store.Settings.Shows[i1]; 
					
						if (v.Alias == entry.Params.Alias) {
							entry.Store.Settings.Shows.splice(i1, 1);
							break;
						}
					}
				}

				dc.comm.sendMessage({ 
					Service: 'dcmCms',
					Feature: 'WebGallery',
					Op: 'UpdateGallery',
					Body: {
						FolderPath: entry.Params.Path,
						Settings: entry.Store.Settings
					}
				}, function(resp) {
					if (resp.Result > 0) {
						dc.pui.Popup.alert(resp.Message);
						return;
					}
				
					window.history.back();
				});
			});
	]]></Function>
</dcui>
